name: "Axe Shopify Preview"
description: "Run axe accessibility tests on Shopify preview URLs from PR description and comment results."
inputs:
  preview_url_contains:
    description: "Part of the URL to look for (e.g., shopifypreview.com)"
    required: true
  github_token:
    description: "GitHub token to post PR comment"
    required: true
runs:
  using: "composite"
  steps:
    - name: Extract PR Body
      id: pr_body
      shell: bash
      run: |
        echo "PR_BODY<<EOF" >> $GITHUB_ENV
        echo "${{ github.event.pull_request.body }}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Parse preview URL
      id: parse_url
      shell: bash
      run: |
        # Extract all URLs
        ALL_URLS=$(echo "$PR_BODY" | grep -oE 'https?://[^ )\n]+')

        # Try matching preview_url_contains (if provided)
        MATCHING_URL=$(echo "$ALL_URLS" | grep "$INPUT_PREVIEW_URL_CONTAINS" | head -n1)

        # If no match yet, try matching ?preview_theme_id=
        if [ -z "$MATCHING_URL" ]; then
          MATCHING_URL=$(echo "$ALL_URLS" | grep -E '\?preview_theme_id=' | head -n1)
        fi

        echo "==== DEBUG INFO ===="
        echo "All extracted URLs:"
        echo "$ALL_URLS"
        echo "Matched URL:"
        echo "$MATCHING_URL"
        echo "===================="

        if [ -z "$MATCHING_URL" ]; then
          echo "No matching URL found."
          echo "url=" >> $GITHUB_OUTPUT
          exit 1
        fi

        echo "url=$MATCHING_URL" >> $GITHUB_OUTPUT

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"

    - name: Install axe CLI
      shell: bash
      run: npm install -g @axe-core/cli

    - name: Run axe test
      id: run_test
      shell: bash
      run: |
        if [ -z "${{ steps.parse_url.outputs.url }}" ]; then
          echo "No test run due to missing URL."
          echo "No matching URL found in PR body." > axe-summary.md
          exit 0
        fi

        echo "Running axe on ${{ steps.parse_url.outputs.url }}"
        axe ${{ steps.parse_url.outputs.url }} --save axe-report.json

        node <<'EOF'
        const fs = require('fs');
        const report = JSON.parse(fs.readFileSync('./axe-report.json', 'utf8'));
        const violations = report?.[0].violations || [];

        if (violations.length === 0) {
          fs.writeFileSync('axe-summary.md', `âœ… No accessibility issues found.\n\n`);
          process.exit(0);
        }

        let table = `### ðŸ§ª Axe Accessibility Report\n\n`;
        table += `| Issue | Impact | Target | Help |\n`;
        table += `|-------|--------|--------|------|\n`;

        violations.forEach(v => {
          const impact = v.impact || "n/a";
          const help = `[${v.help}](${v.helpUrl})`;
          v.nodes.forEach(n => {
            const target = Array.isArray(n.target) ? n.target.join(', ') : 'n/a';
            table += `| ${v.id} | ${impact} | \`${target}\` | ${help} |\n`;
          });
        });

        // Write the report with violations
        fs.writeFileSync('axe-summary.md', table);
        fs.writeFileSync('axe-report.json', JSON.stringify(report, null, 2));
        EOF

    - name: Upload axe-report.json as an artifact (only if merging)
      if: ${{ github.event.pull_request.merged == true }}
      uses: actions/upload-artifact@v4
      with:
        name: axe-report-${{ github.head_ref }}.json
        path: axe-report.json

    - name: Download axe-report.json for target branch (if needed)
      id: download_report
      uses: actions/download-artifact@v4
      with:
        name: axe-report-${{ github.base_ref }}.json
        path: ./axe-report-head
      continue-on-error: true

    - name: Process Violations and Output in a Separate Table
      id: process_violations
      shell: bash
      run: |
        # Check if the report exists before proceeding
        if [ -f "./axe-report-head/axe-report-${{ github.base_ref }}.json" ]; then
          echo "Processing downloaded report for target branch..."

          # Read the downloaded report
          node <<'EOF'
          const fs = require('fs');
          const path = './axe-report-head/axe-report-${{ github.base_ref }}.json';
          const report = JSON.parse(fs.readFileSync(path, 'utf8'));
          const violations = report?.[0].violations || [];

          if (violations.length === 0) {
            console.log("No violations found in downloaded report.");
            process.exit(0);
          }

          let violationsTable = `### ðŸ§ª Violations from Downloaded Report\n\n`;
          violationsTable += `| Issue | Impact | Target | Help |\n`;
          violationsTable += `|-------|--------|--------|------|\n`;

          violations.forEach(v => {
            const impact = v.impact || "n/a";
            const help = `[${v.help}](${v.helpUrl})`;
            v.nodes.forEach(n => {
              const target = Array.isArray(n.target) ? n.target.join(', ') : 'n/a';
              violationsTable += `| ${v.id} | ${impact} | \`${target}\` | ${help} |\n`;
            });
          });

          fs.writeFileSync('axe-violations-summary.md', violationsTable);
          EOF
        else
          echo "No axe-report found for target branch. Skipping violation processing."
          exit 0
        fi
      if: success()

    - name: Comment on PR with results (only if PR is open)
      if: ${{ github.event.pull_request.state == 'open' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('axe-summary.md', 'utf8');
          const violationsSummary = fs.existsSync('axe-violations-summary.md') ? fs.readFileSync('axe-violations-summary.md', 'utf8') : '';

          let body = summary;
          if (violationsSummary) {
            body += "\n\n" + violationsSummary;
          }

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: body,
          });
